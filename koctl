#!/bin/bash
action=$1
target=$2
args=$@

KO_BASE=/opt
export COMPOSE_HTTP_TIMEOUT=180

function usage() {
   echo "kubeoperator 控制脚本"
   echo
   echo "Usage: "
   echo "  ./koctl.sh [COMMAND] [ARGS...]"
   echo "  ./koctl.sh --help"
   echo
   echo "Commands: "
   echo "  status    查看 kubeoperator 服务运行状态"
   echo "  start     启动 kubeoperator 服务"
   echo "  stop      停止 kubeoperator 服务"
   echo "  restart   重启 kubeoperator 服务"
   echo "  reload    重新加载 kubeoperator 服务"
   echo "  uninstall 卸载 kubeoperator 服务"
   echo "  pull      在线拉取 kubeoperator 最新镜像"
   echo "  up        启动 kubeoperator 版本信息"
   echo "  logs      查看 kubeoperator 日志信息"
   echo "  down      删除 kubeoperator 容器（不影响持久化数据）"
   echo "  version   查看 kubeoperator 版本信息"
}

function status() {
   echo
   cd ${KO_BASE}/kubeoperator; docker-compose  ps
}
function start() {
   echo
   cd ${KO_BASE}/kubeoperator; docker-compose  start ${target}
}
function stop() {
   echo
   cd ${KO_BASE}/kubeoperator; docker-compose  stop ${target}
}
function restart() {
   echo
   cd ${KO_BASE}/kubeoperator; docker-compose  restart ${target}
}
function reload() {
   echo
   cd ${KO_BASE}/kubeoperator; docker-compose  up -d ${target}
}
function up() {
   echo
   cd ${KO_BASE}/kubeoperator; docker-compose  up -d ${target}
}
function down() {
   echo
   cd ${KO_BASE}/kubeoperator; docker-compose  down ${target}
}
function logs() {
   echo
   cd ${KO_BASE}/kubeoperator; docker-compose  logs ${target}
}
function pull() {
   echo
   cd ${KO_BASE}/kubeoperator; docker-compose  pull ${target}
}
function version() {
   echo
   cat ${KO_BASE}/kubeoperator/version
}

function success(){
    echo -e "\033[32m kubeOperator 卸载完成. \033[0m"
}
function remove_dir() {
    echo -e "删除 KubeOperator 工作目录"
    rm -rf ${KO_BASE}/kubeoperator 2&> /dev/null
}
function remove_service() {
    if [ -a ${KO_BASE}/kubeoperator/docker-compose.yml ]; then
      read -p "卸载将会完全清除 KubeOperator 的所有容器和数据，是否继续： y/n : " yn
      if [ "$yn" == "Y" ] || [ "$yn" == "y" ]; then
      echo -e "停止 KubeOperator 服务进程"
      cd ${KO_BASE}/kubeoperator && docker-compose down -v
      rm -rf /usr/local/bin/koctl
      else
      exit 0
      fi
    fi
}

function remove_images() {
    echo -e "清理镜像中..."
    docker images -q|xargs docker rmi -f 2&> /dev/null
}

function uninstall() {
    remove_service
    remove_images
    remove_dir
    success
}

function main() {
    case "${action}" in
      status)
         status
         ;;
      start)
         start
         ;;
      stop)
         stop
         ;;
      restart)
         restart
         ;;
      reload)
         reload
         ;;
      uninstall)
         uninstall
         ;;
      down)
         down
         ;;
      up)
         up
         ;;
      version)
         version
         ;;
      pull)
         pull
         ;;
      logs)
         logs
         ;;
      help)
         usage
         ;;
      --help)
         usage
         ;;
      *)
         echo "不支持的参数，请使用 help 或 --help 参数获取帮助"
    esac
}
main
