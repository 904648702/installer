#!/bin/bash
action=$1
target=$2
args=$@

KO_BASE=/opt
export COMPOSE_HTTP_TIMEOUT=180

function usage() {
   echo "kubeoperator 控制脚本"
   echo
   echo "Usage: "
   echo "  ./koctl.sh [COMMAND] [ARGS...]"
   echo "  ./koctl.sh --help"
   echo
   echo "Commands: "
   echo "  status    查看 kubeoperator 服务运行状态"
   echo "  start     启动 kubeoperator 服务"
   echo "  stop      停止 kubeoperator 服务"
   echo "  restart   重启 kubeoperator 服务"
   echo "  reload    重新加载 kubeoperator 服务"
   echo "  uninstall 卸载 kubeoperator 服务"
   echo "  pull      在线拉取 kubeoperator 最新镜像"
   echo "  version   查看 kubeoperator 版本信息"
}

function status() {
   echo
   cd ${KO_BASE}/kubeoperator; docker-compose  ps
}
function start() {
   echo
   cd ${KO_BASE}/kubeoperator; docker-compose  start ${target}
}
function stop() {
   echo
   cd ${KO_BASE}/kubeoperator; docker-compose  stop ${target}
}
function restart() {
   echo
   cd ${KO_BASE}/kubeoperator; docker-compose  restart ${target}
}
function reload() {
   echo
   cd ${KO_BASE}/kubeoperator; docker-compose  up -d
}
function uninstall() {
   echo
   cd ${KO_BASE}/kubeoperator; docker-compose  down ${target}
}
function pull() {
   echo
   cd ${KO_BASE}/kubeoperator; docker-compose  pull ${target}
}
function version() {
   echo
   cat ${KO_BASE}/kubeoperator/version
}

function main() {
    case "${action}" in
      status)
         status
         ;;
      start)
         start
         ;;
      stop)
         stop
         ;;
      restart)
         restart
         ;;
      reload)
         reload
         ;;
      uninstall)
         uninstall
         ;;
      version)
         version
         ;;
      pull)
         pull
         ;;
      help)
         usage
         ;;
      --help)
         usage
         ;;
      *)
         echo "不支持的参数，请使用 help 或 --help 参数获取帮助"
    esac
}
main
